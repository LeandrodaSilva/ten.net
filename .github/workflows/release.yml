name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v2.x

      - name: Verify formatting
        run: deno fmt --check

      - name: Run linter
        run: deno lint --unstable-raw-imports

      - name: Run tests
        run: deno test --parallel --allow-all --unstable-raw-imports --unstable-bundle

      - name: Type check
        run: deno check **/*.ts --unstable-raw-imports

  publish:
    name: Publish to JSR
    runs-on: ubuntu-latest
    needs: test

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v2.x

      - name: Publish to JSR
        run: deno publish --unstable-raw-imports

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [test, publish]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        run: |
          if [ $(git tag --list | wc -l) -eq 1 ]; then
            # First release
            echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
            echo "## What's Changed" >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            echo "ðŸŽ‰ Initial release of ten.net" >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            echo "### Features" >> $GITHUB_OUTPUT
            git log --pretty=format:"- %s" --no-merges >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            # Get previous tag
            PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD~1)
            echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
            echo "## What's Changed" >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            git log --pretty=format:"- %s" --no-merges $PREVIOUS_TAG..HEAD >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            echo "**Full Changelog**: https://github.com/${{ github.repository }}/compare/$PREVIOUS_TAG...${{ steps.get_version.outputs.VERSION }}" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          body: ${{ steps.changelog.outputs.CHANGELOG }}
          draft: false
          prerelease: false
